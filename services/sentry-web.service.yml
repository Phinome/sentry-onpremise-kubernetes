#---------------------------------------------------------------
#                             SERVICES
#---------------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  namespace: sentry
  name: sentry-web
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 9000
  selector:
    instance: sentry-web
---

#---------------------------------------------------------------
#                           WORKLOADS
#---------------------------------------------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: sentry
  name: sentry-web
  labels:
    instance: sentry-web
spec:
  serviceName: sentry-web
  selector:
    matchLabels:
      instance: sentry-web

  #Initial replicas
  replicas: 1

  #Template
  template:
    metadata:
      labels:
        instance: sentry-web
    spec:
      containers:
        - name: sentry-web
          image: getsentry/sentry:20.11.1
          imagePullPolicy: IfNotPresent

#          resources:
#            requests:
#              memory: "150Mi"

          ports:
            - containerPort: 9000

          readinessProbe:
            successThreshold: 1
            failureThreshold: 2
            periodSeconds: 30
            timeoutSeconds: 1
            httpGet:
              port: 9000
              path: /_health/

          envFrom:
            - configMapRef:
                name: sentry

          volumeMounts:
            - name: sentry-data
              mountPath: /data

      volumes:
        - name: sentry-data
          persistentVolumeClaim:
            claimName: sentry-data

---
apiVersion: batch/v1
kind: Job
metadata:

  COLOCARN UM JOB?
initContainers:
  #1) SENTRY POSTGRESQL DATABASE CREATION
  #        - name: sentry-web-db-creation
  #          image: postgres:12
  #          imagePullPolicy: IfNotPresent
  #
  #          envFrom:
  #            - configMapRef:
  #                name: sentry
  #          env:
  #            - name: PGPASSWORD
  #              valueFrom:
  #                configMapKeyRef:
  #                    name: sentry
  #                    key: SENTRY_DB_PASSWORD
  #
  #          command: ["/bin/sh"]
  #          args: ["-c", "createdb -h postgresql -U $(SENTRY_DB_USER) $(SENTRY_DB_NAME) || true"]

  #2) SENTRY DATABASE UPDATE
  - name: sentry-web-db-update
    image: getsentry/sentry:20.11.1
    imagePullPolicy: IfNotPresent

    envFrom:
      - configMapRef:
          name: sentry

    command: ["sentry", "upgrade"]
    args: ["--noinput"]

  #3) ENTRY USER ADMIN CREATION
  - name: sentry-web-user-creation
    image: getsentry/sentry:20.11.1
    imagePullPolicy: IfNotPresent

    envFrom:
      - configMapRef:
          name: sentry

    command: ["/bin/sh"]
    args: ["-c", "sentry createuser --no-input --email $(SENTRY_ADMIN_USER_EMAIL) --superuser --password $(SENTRY_ADMIN_USER_PASSWORD) || true"]